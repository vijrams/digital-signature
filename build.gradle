buildscript {
	ext {
		springBootVersion = '2.6.7'

	}
	repositories {
		mavenLocal()
		maven{
			url "https://nexus.wkelms.com/repository/public"
		}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'groovy'
	id 'com.google.cloud.tools.jib' version '3.2.0'
}

version = '1.6.3'
sourceCompatibility = '11'

repositories {
	mavenLocal()
	maven{
		url "https://nexus.wkelms.com/repository/public"
	}
	mavenCentral()
}

configurations {
	jaxws
}

task wsimport {
	def wsdlURL = "https://twod-test.trustweaver.com/ts/svs.asmx?wsdl"
	String keyStore = "${projectDir}/src/test/resources/tw_keystore_stag_2021.pfx"
	String trustStore = "${projectDir}/src/test/resources/tw_truststore_stg.jks"
	ext.destDir = file("${projectDir}/src/main/java")
	System.setProperty('javax.net.ssl.keyStoreType', 'pkcs12')
	System.setProperty('javax.net.ssl.keyStore', keyStore)
	System.setProperty('javax.net.ssl.keyStorePassword', 'datacert')
	System.setProperty('javax.net.ssl.trustStore', trustStore)
	System.setProperty('javax.net.ssl.trustStorePassword', 'datacert')
	try {
		doLast {
			ant {
				sourceSets.main.output.classesDirs.inits()
				destDir.mkdirs()
				taskdef(name: 'wsimport',
						classname: 'com.sun.tools.ws.ant.WsImport',
						classpath: configurations.jaxws.asPath
				)
				wsimport(keep: true,
						sourcedestdir: 'src/main/java',
						xnocompile: 'true',
						package: "com.wkelms.ebilling.digsig.api.trustweaver",
						wsdl: wsdlURL) {
					xjcarg(value: "-XautoNameResolution")
				}
			}
		}
	}catch(Exception ex) {
		println ex
	}
}


bootJar {
	mainClass.set('com.wkelms.ebilling.digsig.api.DigitalSignatureServiceApplication')
	exclude ("*.jks")
	exclude ("*.yml*")
	exclude ("*.pfx")
	exclude ("*.bat")
	exclude ("*.exe")
}


task dist(type: Copy, dependsOn: bootJar) {
	def keyStore = "tw_keystore_stag_2021.pfx"
	def trustStore = "tw_truststore_stg.jks"
	def distDir = file ('build/dist/')
	distDir.mkdir()
	from 'build/libs'
	from 'src/main/resources'
	into 'build/dist'
	include "application.yml.rename"
	include "$keyStore"
	include "$trustStore"
	include "keystore.jks"
	include "logback.xml"
	include "${project.name}-${project.version}.jar"
	rename("${project.name}-${project.version}.jar","DigSigService-${project.version}.jar")
	rename("application.yml.rename","application.yml")
}

dependencies {

	jaxws 'com.sun.xml.ws:jaxws-tools:2.3.0'

	implementation group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.8'
	implementation group: 'org.codehaus.groovy', name: 'groovy-json', version: '3.0.8'
	implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}"){
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: "${springBootVersion}"
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: "${springBootVersion}"
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "${springBootVersion}"
	implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '9.2.1.jre11'
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	implementation group: 'javax.xml.ws', name: 'jaxws-api', version: '2.3.1'
	implementation group: 'com.sun.xml.ws', name: 'jaxws-ri', version: '2.3.4'
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'

	testImplementation group: 'junit', name: 'junit', version: '4.13.2'
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBootVersion}"
	testImplementation group: 'com.h2database', name: 'h2', version: '2.1.210'

}

tasks {
    build {
        dependsOn(tasks.jib)
    }
}

jib {
    from {
        image = 'amazoncorretto:11-alpine'
    }
    to {
        image = 'zusscrndacrcp.azurecr.io/cp-digital-signature'
        auth{
            username = 'zusscrndacrcp'
            password = 'RU5d5+6Ru191mmP8hphwJXDTxbxJekfH' 
        }        
        tags = ['latest', project.version]
    }
    container {
        appRoot = '/cp-digital-signature'
        jvmFlags = ['-Xms360m', '-Xmx360m', '-javaagent:/cp-digital-signature/glowroot/glowroot.jar']
        ports = ['8080']
        workingDirectory = '/cp-digital-signature'
    }
    allowInsecureRegistries = true
}
