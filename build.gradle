buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
		springVersion = '4.3.7.RELEASE'
	}
	repositories {
		mavenLocal()
		maven{
			url "http://passport-nexus/nexus/content/groups/public/"
		}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

configurations {
    jaxws
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'

repositories {
	mavenLocal()
	maven{
		url "http://passport-nexus/nexus/content/groups/public/"
	}
	mavenCentral()
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


task wsimport {
	def profile = project.hasProperty('env') ? env : 'test'
	def wsdlURL = "https://tseiod-test.trustweaver.com/ts/svs.asmx?wsdl"
	def keyStore = "src/main/resources/tw_keystore_test.pfx"
	def trustStore = "src/main/resources/tw_truststore_test.jks"
	if (profile == 'prod'){
		wsdlURL = wsdlURL.replace("tseiod-test","tseiod")
		keyStore = keyStore.replace("_test","_prod")
		trustStore = trustStore.replace("_test","_prod")
	}
    ext.destDir = file("${projectDir}/src/main/java")
    System.setProperty('javax.net.ssl.keyStoreType', 'pkcs12')
	System.setProperty('javax.net.ssl.keyStore', keyStore)
	System.setProperty('javax.net.ssl.keyStorePassword', 'datacert')
	System.setProperty('javax.net.ssl.trustStore', trustStore)
	System.setProperty('javax.net.ssl.trustStorePassword', 'datacert')
    doLast {
        ant {
            sourceSets.main.output.classesDir.mkdirs()
            destDir.mkdirs()
            taskdef(name: 'wsimport',
                    classname: 'com.sun.tools.ws.ant.WsImport',
                    classpath: configurations.jaxws.asPath
            )
            wsimport(keep: true,
                    destdir: sourceSets.main.output.classesDir,
                    sourcedestdir: destDir,
                    extension: "true",
                    verbose: "false",
                    quiet: "false",
                    package: "com.wkelms.ebilling.digsig.api.trustweaver",
                    xnocompile: "true",
                    wsdl: wsdlURL) {
                xjcarg(value: "-XautoNameResolution")
            }
        }
    }
}

compileJava.dependsOn wsimport

bootRepackage {
	mainClass = 'com.wkelms.ebilling.digsig.api.DigitalSignatureServiceApplication'
}

task dist(type: Copy, dependsOn: bootRepackage) {
	def profile = project.hasProperty('env') ? env : 'test'
	def keyStore = "tw_keystore_test.pfx"
	def trustStore = "tw_truststore_test.jks"
	if (profile == 'prod'){
		keyStore = "tw_keystore_prod.pfx"
		trustStore = "tw_truststore_prod.jks"
	}
    println "Environment -----------> $profile"
	def distDir = file ('build/dist/')
	distDir.mkdir()
	from 'build/libs'
	from 'src/main/resources'
	into 'build/dist'
	include "nssm.exe"
	include "start_service.bat"
	include "application.yml.rename"
	include "keystore.jks"
    include "$keyStore"
	include "$trustStore"
    include "logback.xml"
	include "${project.name}-${project.version}.jar"
	rename("${project.name}-${project.version}.jar","DigSigService-${project.version}.jar")
	rename("application.yml.rename","application.yml")
}

uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: "http://passport-nexus/nexus/content/repositories/passport-nexus-snapshots") {
				authentication(userName: "deployment", password: "datacert")
			}
			println "Uploading DigSigService-$version to Nexus Repo"
			pom.version = "$version"
			pom.artifactId = "DigSigService"
			pom.groupId = "com.datacert.collaborationportal.digsig"
		}
	}
}
dependencies {
	jaxws 'com.sun.xml.ws:jaxws-tools:2.1.4'
	compile "org.codehaus.groovy:groovy-all:2.4.10"
	compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
	compile "org.springframework.boot:spring-boot-actuator-docs:${springBootVersion}"
	compile "org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}"
	compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
	compile "org.springframework:spring-webmvc:${springVersion}"
	compile "com.microsoft:sqljdbc4:4.0"
	compile "org.apache.httpcomponents:httpclient:4.4"
	compile "commons-lang:commons-lang:2.6"
	compile "commons-io:commons-io:2.4"
	testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

